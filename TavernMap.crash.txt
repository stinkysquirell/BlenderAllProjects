# Blender 3.4.1, Commit date: 2022-12-19 17:00, Hash 55485cb379f7
bpy.ops.object.editmode_toggle()  # Operator
bpy.data.window_managers["WinMan"].(null) = 0.26  # Property
bpy.data.window_managers["WinMan"].(null) = 0.17069  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=0.17)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.1)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.28)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.37)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.4)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.43)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.46)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.49)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.52)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.52  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.52, maxHeight=0.37)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.52, maxHeight=0.25)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.52, maxHeight=0.13)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.52, maxHeight=0.07)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.52, maxHeight=0.04)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.52, maxHeight=0.01)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.52, maxHeight=-0.02)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.52, maxHeight=-0.05)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.52, maxHeight=-0.08)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.52, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.11  # Property
bpy.data.window_managers["WinMan"].(null) = -0.55  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.55, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.58  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.58, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.61  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.61, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.64  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.64, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.61  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.61, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.58  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.58, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.55  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.55, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.52  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.52, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.49  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.49, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.46  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.46, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.43  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.43, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.4  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.4, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.37  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.37, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.34  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.34, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.31  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.31, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.28  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.28, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.25  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.25, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.22  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.22, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.19  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.19, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.16  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.16, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.13  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.13, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.1  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.1, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.07  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.07, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.04  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.04, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.00999996  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.14  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.14)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.11  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.11)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.08  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.08)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.05  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.05)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.02  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.153937)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.173622)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.18937)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.193307)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.201181)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.205118)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.212992)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.216929)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.22874)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.236614)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.244488)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.256299)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.264173)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.275984)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.287795)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543)  # Operator
bpy.data.window_managers["WinMan"].(null) = 0.303543  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(subpolygon1=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543)  # Operator
bpy.data.window_managers["WinMan"].(null) = False  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(subpolygon1=False, subpolygon2=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543)  # Operator
bpy.data.window_managers["WinMan"].(null) = False  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(subpolygon1=False, subpolygon2=False, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543)  # Operator
bpy.data.window_managers["WinMan"].(null) = False  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(subpolygon1=False, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543)  # Operator
bpy.data.window_managers["WinMan"].(null) = True  # Property
bpy.data.window_managers["WinMan"].(null) = 2  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=2, subpolygon1=False, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543)  # Operator
bpy.data.window_managers["WinMan"].(null) = 3  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=3, subpolygon1=False, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=3, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543)  # Operator
bpy.data.window_managers["WinMan"].(null) = True  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=3, subpolygon1=True, subpolygon2=True, subpolygon3=True, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543)  # Operator
bpy.data.window_managers["WinMan"].(null) = True  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=3, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543)  # Operator
bpy.data.window_managers["WinMan"].(null) = False  # Property
bpy.data.window_managers["WinMan"].(null) = 2  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=2, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543)  # Operator
bpy.data.window_managers["WinMan"].(null) = 1  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=True)  # Operator
bpy.data.window_managers["WinMan"].(null) = True  # Property
bpy.data.window_managers["WinMan"].(null) = 2  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=True, mindoodads=2)  # Operator
bpy.data.window_managers["WinMan"].(null) = 3  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=True, mindoodads=3)  # Operator
bpy.data.window_managers["WinMan"].(null) = 4  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=True, mindoodads=4)  # Operator
bpy.data.window_managers["WinMan"].(null) = 5  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=True, mindoodads=5)  # Operator
bpy.data.window_managers["WinMan"].(null) = 6  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=True, mindoodads=6)  # Operator
bpy.data.window_managers["WinMan"].(null) = 5  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=True, mindoodads=5)  # Operator
bpy.data.window_managers["WinMan"].(null) = 4  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=True, mindoodads=4)  # Operator
bpy.data.window_managers["WinMan"].(null) = 3  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=True, mindoodads=3)  # Operator
bpy.data.window_managers["WinMan"].(null) = 2  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=True, mindoodads=2)  # Operator
bpy.data.window_managers["WinMan"].(null) = 1  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=True, mindoodads=1)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1)  # Operator
bpy.data.window_managers["WinMan"].(null) = False  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=1)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=4)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=3)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = 0  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=False, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = False  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=True, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = True  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=False, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = False  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=True, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = True  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=False, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = False  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=True, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = True  # Property
bpy.data.window_managers["WinMan"].(null) = -0.05  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=True, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.05, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.02  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=True, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = 0.01  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=True, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=0.01, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = 0.02  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=True, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=0.02, maxHeight=0.01, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.02  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=True, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=0.02, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.00999996  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=True, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.02, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.01  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=True, subpolygon1=True, subpolygon2=True, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.01, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=True, subpolygon1=True, subpolygon2=False, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.01, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = False  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, doprots=True, subpolygon1=False, subpolygon2=False, subpolygon3=False, minHeight=-0.00999996, maxHeight=-0.01, minTaper=0.303543, dodoodads=False, mindoodads=1, topProtMat=0)  # Operator
bpy.data.window_managers["WinMan"].(null) = False  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.001", extend=False)  # Operator
bpy.ops.discombobulate.ops()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops()  # Operator
bpy.data.window_managers["WinMan"].(null) = 0.02  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(maxHeight=0.02)  # Operator
bpy.data.window_managers["WinMan"].(null) = 0.05  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(maxHeight=0.05)  # Operator
bpy.data.window_managers["WinMan"].(null) = 0.02  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(maxHeight=0.02)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.01  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(maxHeight=-0.01)  # Operator
bpy.data.window_managers["WinMan"].(null) = -0.04  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(maxHeight=-0.04)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(subpolygon3=True, maxHeight=-0.04)  # Operator
bpy.data.window_managers["WinMan"].(null) = True  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(subpolygon2=True, subpolygon3=True, maxHeight=-0.04)  # Operator
bpy.data.window_managers["WinMan"].(null) = True  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(subpolygon1=True, subpolygon2=True, subpolygon3=True, maxHeight=-0.04)  # Operator
bpy.data.window_managers["WinMan"].(null) = True  # Property
bpy.data.window_managers["WinMan"].(null) = 1  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=True, maxHeight=-0.04)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=True, maxHeight=-0.04, dodoodads=True)  # Operator
bpy.data.window_managers["WinMan"].(null) = True  # Property
bpy.data.window_managers["WinMan"].(null) = 1  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=True, maxHeight=-0.04, dodoodads=True, topProtMat=1)  # Operator
bpy.data.window_managers["WinMan"].(null) = 1  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=1, subpolygon1=True, subpolygon2=True, subpolygon3=True, maxHeight=-0.04, dodoodads=True, sideProtMat=1, topProtMat=1)  # Operator
bpy.data.window_managers["WinMan"].(null) = 2  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.002", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.003", extend=False)  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.003", extend=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.normals_make_consistent(inside=False)  # Operator
bpy.ops.mesh.select_all(action='DESELECT')  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.select_pattern(pattern="tmp", extend=False)  # Operator
bpy.ops.object.delete()  # Operator
bpy.ops.object.select_pattern(pattern="discombobulated_mesh.003", extend=False)  # Operator
bpy.ops.discombobulate.ops(repeatprot=2, subpolygon1=True, subpolygon2=True, subpolygon3=True, maxHeight=-0.04, dodoodads=True, sideProtMat=1, topProtMat=1)  # Operator
bpy.ops.object.delete(use_global=False, confirm=False)  # Operator
Deleted 1 object(s)  # Info
bpy.ops.object.delete(use_global=False, confirm=False)  # Operator
Deleted 1 object(s)  # Info
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":157, "mesh_select_mode_init":(False, False, True)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.select_mode(use_extend=False, use_expand=False, type='VERT')  # Operator
bpy.ops.mesh.primitive_plane_add(size=2, enter_editmode=False, align='WORLD', location=(1.46406, -0.00831249, 2.34364), scale=(1, 1, 1))  # Operator
bpy.ops.outliner.item_activate(deselect_all=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.delete(type='VERT')  # Operator
bpy.ops.mesh.edge_face_add()  # Operator
bpy.ops.mesh.f2()  # Operator
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = True  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = True  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.data.scenes["Scene"].(null) = False  # Property
bpy.context.space_data.shading.type = 'RENDERED'  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.context.space_data.context = 'MODIFIER'  # Property
bpy.context.space_data.context = 'PARTICLES'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.space_data.shading.type = 'SOLID'  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.primitive_cylinder_add(radius=1, depth=2, enter_editmode=False, align='WORLD', location=(0.0539274, -17.0536, 2.34364), scale=(1, 1, 1))  # Operator
bpy.ops.transform.translate(value=(-0, -13.6357, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
Copied 1 selected object(s)  # Info
bpy.ops.view3d.pastebuffer()  # Operator
1 object(s) pasted  # Info
bpy.ops.transform.translate(value=(0, 7.51134, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.transform.rotate(value=1.5708, orient_axis='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1, 5.27003, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.transform.translate(value=(-0, -15.0654, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.transform.resize(value=(1, 2, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":32, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":6, "mesh_select_mode_init":(True, False, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":False, "use_accurate":False})  # Operator
bpy.ops.mesh.dissolve_verts()  # Operator
bpy.ops.transform.vert_slide(value=0.345101, mirror=True, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False, correct_uv=True)  # Operator
bpy.ops.transform.vert_slide(value=0.572441, mirror=True, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False, correct_uv=True)  # Operator
bpy.ops.transform.vert_slide(value=0.326658, mirror=True, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False, correct_uv=True)  # Operator
bpy.ops.transform.vert_slide(value=0.28005, mirror=True, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False, correct_uv=True)  # Operator
bpy.ops.transform.vert_slide(value=0.67372, mirror=True, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False, correct_uv=True)  # Operator
bpy.ops.transform.vert_slide(value=0.37986, mirror=True, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False, correct_uv=True)  # Operator
bpy.ops.transform.vert_slide(value=0.274958, mirror=True, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False, correct_uv=True)  # Operator
bpy.ops.transform.translate(value=(-0.0135422, -0.0515972, 0.0423634), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-0.0641951, 0.030579, 0.0832195), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0.0314505, 0.0115886, -0.0492301), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.edge_slide(value=0.115172, mirror=True, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False, correct_uv=True)  # Operator
bpy.ops.mesh.select_mode(use_extend=False, use_expand=False, type='FACE')  # Operator
bpy.ops.mesh.extrude_region_move(MESH_OT_extrude_region={"use_normal_flip":False, "use_dissolve_ortho_edges":False, "mirror":False}, TRANSFORM_OT_translate={"value":(5.96046e-08, -7.27596e-11, 1.90979), "orient_axis_ortho":'X', "orient_type":'NORMAL', "orient_matrix":((0.202388, 0, -0.979306), (0.00149683, 0.999999, 0.000309343), (0.979304, -0.00152847, 0.202387)), "orient_matrix_type":'NORMAL', "constraint_axis":(False, False, True), "mirror":False, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "view2d_edge_pan":False, "release_confirm":False, "use_accurate":False, "use_automerge_and_split":False})  # Operator
bpy.ops.transform.resize(value=(1, 0.601873, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 1.82709, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.rotate(value=0.792922, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.transform.resize(value=(0.849848, 0.849848, 0.849848), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.rotate(value=0.391538, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-0.563625, -0, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-0, -0, -0.343638), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2135, "mesh_select_mode_init":(False, False, True)}, TRANSFORM_OT_edge_slide={"value":-0.33353, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":False, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2154, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2200, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2164, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2204, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.transform.translate(value=(-0.0466459, 0.100643, -0.0122177), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.transform.resize(value=(0.984408, 0.984408, 0.984408), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.977881, 0.977881, 0.977881), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.97979, 0.97979, 0.97979), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.transform.resize(value=(0.988794, 0.988794, 0.988794), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.987091, 0.987091, 0.987091), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.988194, 0.988194, 0.988194), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.984861, 0.984861, 0.984861), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.987336, 0.987336, 0.987336), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.990479, 0.990479, 0.990479), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.992089, 0.992089, 0.992089), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.978437, 0.978437, 0.978437), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.962, 0.962, 0.962), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.987093, 0.987093, 0.987093), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.973863, 0.973863, 0.973863), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.982496, 0.982496, 0.982496), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.outliner.item_activate(deselect_all=True)  # Operator
bpy.ops.outliner.item_rename()  # Operator
bpy.ops.transform.translate(value=(12.4248, 0, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 5.3488), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 45.6336, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.rotate(value=3.62112, orient_axis='Y', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 1.89676), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":231, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":12, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":12, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":1989, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":189, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.00816439, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":183, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":360, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.00776256, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":354, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.0182927, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":204, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":1923, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.0374682, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2439, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.104372, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2568, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":1, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":210, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.0472496, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2631, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":-0.418093, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":1928, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":-0.12609, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2059, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.54075, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2882, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":1, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":15, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.495183, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2953, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":-1, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":1992, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":-0.255498, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":3141, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.35, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2265, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.871152, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2271, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.519512, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":3356, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.139485, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2953, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":-0.279476, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2389, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":-0.00126103, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2390, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":1, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":357, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.173529, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":1972, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":1, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":3730, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0.203617, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.delete(use_global=False, confirm=False)  # Operator
Deleted 1 object(s)  # Info
bpy.ops.transform.translate(value=(-0, -0, -1.30708), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 1.39296, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-1.22027, -0, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":6, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":27, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":False, "use_accurate":False})  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.select_mode(use_extend=False, use_expand=False, type='VERT')  # Operator
bpy.ops.mesh.dissolve_verts()  # Operator
bpy.ops.mesh.dissolve_verts()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.transform.resize(value=(0.751719, 0.751719, 0.751719), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.extrude_region_move(MESH_OT_extrude_region={"use_normal_flip":False, "use_dissolve_ortho_edges":False, "mirror":False}, TRANSFORM_OT_translate={"value":(-5.6134e-09, -7.27596e-10, 0.555532), "orient_axis_ortho":'X', "orient_type":'NORMAL', "orient_matrix":((-0.926116, 0.171894, -0.3358), (0.330214, -0.0609999, -0.941933), (-0.182397, -0.983225, -0.000268841)), "orient_matrix_type":'NORMAL', "constraint_axis":(False, False, True), "mirror":False, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "view2d_edge_pan":False, "release_confirm":False, "use_accurate":False, "use_automerge_and_split":False})  # Operator
bpy.ops.transform.rotate(value=-1.15012, orient_axis='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.385619), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0.213047, 0, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 0.169916, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.478569, 0.478569, 0.478569), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.rotate(value=-0.386797, orient_axis='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.rotate(value=-0.284286, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 0.131712, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.outliner.item_activate(deselect_all=True)  # Operator
bpy.ops.outliner.item_activate(deselect_all=True)  # Operator
bpy.ops.outliner.item_rename()  # Operator
bpy.ops.transform.translate(value=(0, 16.2645, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-0, -0, -1.33726), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-15.2416, -0, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.rotate(value=1.13214, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.rotate(value=1.64983, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.select_mode(use_extend=False, use_expand=False, type='FACE')  # Operator
bpy.ops.mesh.dissolve_limited()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.primitive_cylinder_add(enter_editmode=False, align='WORLD', location=(0.0539274, -17.0536, 2.34364), scale=(1, 1, 1))  # Operator
bpy.ops.transform.translate(value=(-0, -12.9694, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, 0.842529), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, 7.91054), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.0746968, 0.0746968, 0.0746968), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, 2.56992), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, 2.11449), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.551995, 0.551995, 0.551995), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.extrude_region_move(MESH_OT_extrude_region={"use_normal_flip":False, "use_dissolve_ortho_edges":False, "mirror":False}, TRANSFORM_OT_translate={"value":(0, 0, 0.185838), "orient_axis_ortho":'X', "orient_type":'NORMAL', "orient_matrix":((-0.290285, 0.95694, 2.00754e-07), (0.95694, 0.290285, -6.61799e-07), (-6.91578e-07, 0, -1)), "orient_matrix_type":'NORMAL', "constraint_axis":(False, False, True), "mirror":False, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "view2d_edge_pan":False, "release_confirm":False, "use_accurate":False, "use_automerge_and_split":False})  # Operator
bpy.ops.transform.resize(value=(5.91586, 5.91586, 5.91586), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.mesh.extrude_region_move(MESH_OT_extrude_region={"use_normal_flip":False, "use_dissolve_ortho_edges":False, "mirror":False}, TRANSFORM_OT_translate={"value":(0, -4.44089e-16, 0.0477152), "orient_axis_ortho":'X', "orient_type":'NORMAL', "orient_matrix":((0.634394, -0.77301, -1.00289e-07), (-0.77301, -0.634394, 1.22203e-07), (-1.58087e-07, 0, -1)), "orient_matrix_type":'NORMAL', "constraint_axis":(False, False, True), "mirror":False, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "view2d_edge_pan":False, "release_confirm":False, "use_accurate":False, "use_automerge_and_split":False})  # Operator
bpy.ops.transform.resize(value=(1.3768, 1.3768, 1.3768), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":81, "mesh_select_mode_init":(False, False, True)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.transform.edge_slide(value=0.83062, mirror=True, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False, correct_uv=True)  # Operator
bpy.ops.mesh.select_mode(use_extend=False, use_expand=False, type='FACE')  # Operator
bpy.ops.transform.resize(value=(0.5, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1, 0.5, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":135, "mesh_select_mode_init":(False, False, True)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.extrude_region_move(MESH_OT_extrude_region={"use_normal_flip":False, "use_dissolve_ortho_edges":False, "mirror":False}, TRANSFORM_OT_translate={"value":(-0, -0, -0.166487), "orient_axis_ortho":'X', "orient_type":'GLOBAL', "orient_matrix":((1, 0, 0), (0, 1, 0), (0, 0, 1)), "orient_matrix_type":'GLOBAL', "constraint_axis":(False, False, True), "mirror":False, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "view2d_edge_pan":False, "release_confirm":False, "use_accurate":False, "use_automerge_and_split":False})  # Operator
bpy.ops.mesh.select_mode(use_extend=False, use_expand=False, type='FACE')  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":410, "mesh_select_mode_init":(False, False, True)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.delete(type='FACE')  # Operator
bpy.ops.mesh.edge_face_add()  # Operator
bpy.ops.mesh.f2()  # Operator
bpy.context.space_data.context = 'MODIFIER'  # Property
bpy.ops.object.modifier_add(type='SOLIDIFY')  # Operator
bpy.context.object.modifiers["Solidify"].thickness = 0.02  # Property
No Selection. No changes applied  # Info
bpy.ops.object.editmode_toggle()  # Operator
No Selection. No changes applied  # Info
No Selection. No changes applied  # Info
bpy.ops.object.modifier_apply(modifier="Solidify")  # Operator
bpy.ops.object.apply_all_modifiers()  # Operator
Applying modifiers on all Selected Objects  # Info
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.transform.translate(value=(0, 8.25376, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(12.6745, 0, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 5.11267), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-0.223912, -0, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.modifier_add(type='ARRAY')  # Operator
bpy.context.object.modifiers["Array"].relative_offset_displace[0] = 0  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 0.1  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 0.2  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 0.3  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 0.4  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 0.5  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 0.6  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 4  # Property
bpy.context.object.modifiers["Array"].count = 3  # Property
bpy.context.object.modifiers["Array"].count = 4  # Property
bpy.context.object.modifiers["Array"].count = 5  # Property
bpy.ops.transform.translate(value=(0, 15.9336, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 4.1  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 4.2  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 4.3  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 4.4  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 4.5  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 4.6  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 4.7  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 4.8  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 4.9  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 5  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 5.1  # Property
bpy.ops.transform.translate(value=(-0, -1.31661, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.454791), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.normals_make_consistent()  # Operator
bpy.ops.mesh.looptools_bridge(cubic_strength=1, interpolation='cubic', loft=True, loft_loop=False, min_width=0, mode='shortest', remove_faces=True, reverse=False, segments=1, twist=0)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2139, "mesh_select_mode_init":(False, False, True)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2432, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2051, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":3751, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":1288, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":4086, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":1977, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":1354, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":1708, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":1950, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2516, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":2131, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.select_mode(use_extend=False, use_expand=False, type='FACE')  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.primitive_plane_add(enter_editmode=False, align='WORLD', location=(0.0539274, -17.0536, 2.34364), scale=(1, 1, 1))  # Operator
bpy.ops.transform.rotate(value=1.5708, orient_axis='Y', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.extrude_region_move(MESH_OT_extrude_region={"use_normal_flip":False, "use_dissolve_ortho_edges":False, "mirror":False}, TRANSFORM_OT_translate={"value":(0, 0, 0), "orient_axis_ortho":'X', "orient_type":'GLOBAL', "orient_matrix":((1, 0, 0), (0, 1, 0), (0, 0, 1)), "orient_matrix_type":'GLOBAL', "constraint_axis":(False, True, False), "mirror":False, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "view2d_edge_pan":False, "release_confirm":False, "use_accurate":False, "use_automerge_and_split":False})  # Operator
bpy.ops.transform.resize(value=(1.09004, 1.09004, 1.09004), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-0.0733191, -0, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.mesh.extrude_region_move(MESH_OT_extrude_region={"use_normal_flip":False, "use_dissolve_ortho_edges":False, "mirror":False}, TRANSFORM_OT_translate={"value":(0, 0, 0), "orient_axis_ortho":'X', "orient_type":'NORMAL', "orient_matrix":((-7.54979e-08, -0, 1), (0, 1, 0), (-1, 0, -7.54979e-08)), "orient_matrix_type":'NORMAL', "constraint_axis":(False, False, True), "mirror":False, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "view2d_edge_pan":False, "release_confirm":False, "use_accurate":False, "use_automerge_and_split":False})  # Operator
bpy.ops.transform.resize(value=(0.957766, 0.957766, 0.957766), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.mesh.extrude_region_move(MESH_OT_extrude_region={"use_normal_flip":False, "use_dissolve_ortho_edges":False, "mirror":False}, TRANSFORM_OT_translate={"value":(-0.0332732, -0, -0), "orient_axis_ortho":'X', "orient_type":'GLOBAL', "orient_matrix":((1, 0, 0), (0, 1, 0), (0, 0, 1)), "orient_matrix_type":'GLOBAL', "constraint_axis":(True, False, False), "mirror":False, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "view2d_edge_pan":False, "release_confirm":False, "use_accurate":False, "use_automerge_and_split":False})  # Operator
bpy.data.window_managers["WinMan"].(null) = 0.02  # Property
bpy.data.window_managers["WinMan"].(null) = 0.05  # Property
bpy.data.window_managers["WinMan"].(null) = 0.08  # Property
bpy.data.window_managers["WinMan"].(null) = 0.11  # Property
bpy.data.window_managers["WinMan"].(null) = 0.14  # Property
bpy.data.window_managers["WinMan"].(null) = 0.17  # Property
bpy.data.window_managers["WinMan"].(null) = 0.2  # Property
bpy.data.window_managers["WinMan"].(null) = 0.23  # Property
bpy.data.window_managers["WinMan"].(null) = 0.26  # Property
bpy.data.window_managers["WinMan"].(null) = 0.29  # Property
bpy.data.window_managers["WinMan"].(null) = 0.32  # Property
bpy.data.window_managers["WinMan"].(null) = 0.35  # Property
bpy.data.window_managers["WinMan"].(null) = 0.38  # Property
bpy.data.window_managers["WinMan"].(null) = 0.41  # Property
bpy.data.window_managers["WinMan"].(null) = -0.01  # Property
bpy.data.window_managers["WinMan"].(null) = 0.02  # Property
bpy.data.window_managers["WinMan"].(null) = 0.05  # Property
bpy.data.window_managers["WinMan"].(null) = 0.08  # Property
bpy.data.window_managers["WinMan"].(null) = 0.11  # Property
bpy.data.window_managers["WinMan"].(null) = 0.14  # Property
bpy.data.window_managers["WinMan"].(null) = 0.17  # Property
bpy.data.window_managers["WinMan"].(null) = 0.2  # Property
bpy.data.window_managers["WinMan"].(null) = 0.23  # Property
bpy.data.window_managers["WinMan"].(null) = 0.26  # Property
bpy.data.window_managers["WinMan"].(null) = 0.74  # Property
bpy.data.window_managers["WinMan"].(null) = 0.01  # Property
bpy.data.window_managers["WinMan"].(null) = 0.01  # Property
bpy.data.window_managers["WinMan"].(null) = 0.4  # Property
bpy.data.window_managers["WinMan"].(null) = -0.01  # Property
bpy.data.window_managers["WinMan"].(null) = -0.01  # Property
bpy.ops.mesh.inset(thickness=0.0382954, depth=0)  # Operator
bpy.ops.transform.resize(value=(1.03006, 1.03006, 1.03006), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":0, "mesh_select_mode_init":(False, False, True)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":0, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":44, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":29, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":116, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":21, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":167, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":62, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":136, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":145, "mesh_select_mode_init":(False, True, False)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":True, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.inset(thickness=0, depth=0)  # Operator
bpy.ops.mesh.select_mode(use_extend=False, use_expand=False, type='FACE')  # Operator
bpy.ops.mesh.shortest_path_pick(edge_mode='SELECT', use_fill=False, index=711)  # Operator
bpy.ops.mesh.shortest_path_pick(edge_mode='SELECT', use_fill=False, index=762)  # Operator
bpy.ops.mesh.shortest_path_pick(edge_mode='SELECT', use_fill=False, index=699)  # Operator
bpy.ops.mesh.shortest_path_pick(edge_mode='SELECT', use_fill=False, index=607)  # Operator
bpy.ops.transform.translate(value=(0.0270013, 0, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.transform.resize(value=(1, 1, 1.34361), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.outliner.item_activate(deselect_all=True)  # Operator
bpy.ops.outliner.item_rename()  # Operator
bpy.ops.transform.translate(value=(-17.5995, -0, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(1.03262, 0, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 24.9431, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 7.17244), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1.44109, 1.44109, 1.44109), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, 1.2), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1.6, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-0.150934, 0.506593, 0.402016), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0.220285, 0, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1, 1.5, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-0, -0.372226, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
Copied 1 selected object(s)  # Info
bpy.ops.view3d.pastebuffer()  # Operator
1 object(s) pasted  # Info
bpy.ops.transform.translate(value=(-0, -0, -3.77282), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1, 0.6, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 0.663168, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
Copied 1 selected object(s)  # Info
bpy.ops.view3d.pastebuffer()  # Operator
1 object(s) pasted  # Info
bpy.ops.transform.translate(value=(-0, -2.26893, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-0, -0, -1.23418), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
Copied 1 selected object(s)  # Info
bpy.ops.view3d.pastebuffer()  # Operator
1 object(s) pasted  # Info
bpy.ops.transform.translate(value=(-0, -0, -2.49373), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 2.18797, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, 0.8), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":846, "mesh_select_mode_init":(False, False, True)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":False, "snap":False, "snap_elements":{'INCREMENT'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.loopcut_slide(MESH_OT_loopcut={"number_cuts":1, "smoothness":0, "falloff":'INVERSE_SQUARE', "object_index":0, "edge_index":846, "mesh_select_mode_init":(False, False, True)}, TRANSFORM_OT_edge_slide={"value":0, "single_side":False, "use_even":False, "flipped":False, "use_clamp":True, "mirror":False, "snap":False, "snap_elements":{'INCREMENT'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "correct_uv":True, "release_confirm":True, "use_accurate":False})  # Operator
bpy.ops.mesh.select_mode(use_extend=False, use_expand=False, type='VERT')  # Operator
bpy.ops.transform.edge_slide(value=-0.44, mirror=True, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False, correct_uv=True)  # Operator
bpy.ops.transform.vert_slide(value=0.534394, mirror=True, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False, correct_uv=True)  # Operator
bpy.ops.mesh.bevel(offset=0.00682968, offset_pct=0, affect='VERTICES')  # Operator
bpy.ops.mesh.bevel(offset=0.00682968, offset_pct=0, affect='EDGES')  # Operator
bpy.data.window_managers["WinMan"].(null) = 'EDGES'  # Property
bpy.ops.mesh.extrude_region_move(MESH_OT_extrude_region={"use_normal_flip":False, "use_dissolve_ortho_edges":False, "mirror":False}, TRANSFORM_OT_translate={"value":(0, 0, -0.98683), "orient_axis_ortho":'X', "orient_type":'NORMAL', "orient_matrix":((0, 0.00306338, -0.999995), (-0, -0.999995, -0.00306338), (-1, 0, 0)), "orient_matrix_type":'NORMAL', "constraint_axis":(False, False, True), "mirror":False, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_elements":{'FACE'}, "use_snap_project":False, "snap_target":'CLOSEST', "use_snap_self":True, "use_snap_edit":True, "use_snap_nonedit":True, "use_snap_selectable":False, "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "view2d_edge_pan":False, "release_confirm":False, "use_accurate":False, "use_automerge_and_split":False})  # Operator
bpy.ops.object.editmode_toggle()  # Operator
Copied 1 selected object(s)  # Info
bpy.ops.view3d.pastebuffer()  # Operator
1 object(s) pasted  # Info
bpy.ops.transform.translate(value=(-2.98092, -0, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 5.15334, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 5.28054), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-11.9505, -0, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 0.338215, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-0.199319, -0, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-0, -0, -0.0230475), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.transform.resize(value=(0.916295, 0.916295, 0.916295), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.915881, 0.915881, 0.915881), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.787516, 0.787516, 0.787516), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.985171, 0.985171, 0.985171), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.991512, 0.991512, 0.991512), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.984902, 0.984902, 0.984902), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.980193, 0.980193, 0.980193), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.980895, 0.980895, 0.980895), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.976998, 0.976998, 0.976998), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.989064, 0.989064, 0.989064), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.995868, 0.995868, 0.995868), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.983125, 0.983125, 0.983125), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.968753, 0.968753, 0.968753), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.965483, 0.965483, 0.965483), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.984824, 0.984824, 0.984824), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.979346, 0.979346, 0.979346), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.970347, 0.970347, 0.970347), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.984223, 0.984223, 0.984223), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.975735, 0.975735, 0.975735), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.transform.resize(value=(0.993033, 0.993033, 0.993033), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.98668, 0.98668, 0.98668), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.987241, 0.987241, 0.987241), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.985391, 0.985391, 0.985391), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.988857, 0.988857, 0.988857), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.resize(value=(0.9805, 0.9805, 0.9805), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.editmode_toggle()  # Operator
Copied 1 selected object(s)  # Info
bpy.ops.view3d.pastebuffer()  # Operator
1 object(s) pasted  # Info
bpy.ops.transform.translate(value=(0, 13.2963, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.rotate(value=-2.8169, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
Copied 1 selected object(s)  # Info
bpy.ops.view3d.pastebuffer()  # Operator
1 object(s) pasted  # Info
bpy.ops.transform.translate(value=(-10.736, -0, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.context.object.modifiers["Array"].count = 4  # Property
bpy.context.object.modifiers["Array"].count = 3  # Property
bpy.context.object.modifiers["Array"].count = 2  # Property
bpy.context.object.modifiers["Array"].count = 1  # Property
bpy.context.object.modifiers["Array"].count = 2  # Property
bpy.context.object.modifiers["Array"].count = 3  # Property
bpy.context.object.modifiers["Array"].count = 4  # Property
bpy.context.object.modifiers["Array"].count = 5  # Property
bpy.context.object.modifiers["Array"].count = 4  # Property
bpy.context.object.modifiers["Array"].count = 3  # Property
bpy.context.object.modifiers["Array"].count = 2  # Property
bpy.context.object.modifiers["Array"].count = 1  # Property
bpy.context.object.modifiers["Array"].count = 2  # Property
bpy.ops.transform.resize(value=(2.02199, 2.02199, 2.02199), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(1.32402, 0, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(0, 3.2032, 0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 5.2  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 5.3  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 5.4  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 5.5  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 5.6  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 5.7  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 5.8  # Property
bpy.context.object.modifiers["Array"].relative_offset_displace[1] = 5.9  # Property
bpy.ops.transform.translate(value=(0, 0, 5.06913), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.transform.translate(value=(-6.63288, -0, -0), orient_axis_ortho='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, snap=False, snap_elements={'FACE'}, use_snap_project=False, snap_target='CLOSEST', use_snap_self=True, use_snap_edit=True, use_snap_nonedit=True, use_snap_selectable=False)  # Operator
bpy.ops.object.delete(use_global=False, confirm=False)  # Operator
Deleted 1 object(s)  # Info
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.context.object.modifiers["Array"].use_relative_offset = False  # Property
bpy.context.object.modifiers["Array"].use_relative_offset = True  # Property
bpy.context.object.modifiers["Array"].use_relative_offset = False  # Property
bpy.context.object.modifiers["Array"].use_constant_offset = True  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[0] = 8.41  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[0] = 0  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.2  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.19  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.18  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.17  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.16  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.15  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.14  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.13  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.12  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.11  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.1  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.09  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.08  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.07  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.06  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.05  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.04  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.03  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.02  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83.01  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 83  # Property
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
bpy.context.space_data.context = 'MATERIAL'  # Property
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
bpy.ops.material.new()  # Operator
bpy.data.materials["Material"].node_tree.nodes["Principled BSDF"].inputs[0].default_value = (0.8, 0.8, 0.8, 1)  # Property
bpy.data.materials["Material"].node_tree.nodes["Emission"].inputs[0].default_value = (1, 0.331999, 0.00966311, 1)  # Property
bpy.data.materials["Material"].node_tree.nodes["Emission"].inputs[0].default_value = (0.157434, 0.0565485, 0.00323134, 1)  # Property
bpy.data.materials["Material"].node_tree.nodes["Emission"].inputs[0].default_value = (0.157434, 0.0565485, 0.00323134, 1)  # Property
bpy.data.materials["Material"].node_tree.nodes["Emission"].inputs[1].default_value = 77.2  # Property
bpy.context.space_data.shading.type = 'RENDERED'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.space_data.context = 'TOOL'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.space_data.shading.type = 'MATERIAL'  # Property
bpy.context.space_data.shading.type = 'RENDERED'  # Property
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.data.materials["Material"].node_tree.nodes["Emission"].inputs[1].default_value = 368.5  # Property
bpy.context.space_data.shading.type = 'MATERIAL'  # Property
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
bpy.ops.object.editmode_toggle()  # Operator
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
bpy.context.space_data.context = 'MODIFIER'  # Property
bpy.context.object.modifiers["Array"].use_constant_offset = True  # Property
bpy.context.object.modifiers["Array"].use_relative_offset = False  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[0] = 0  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 0.01  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 0.02  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 0.03  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 15.33  # Property
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.context.object.modifiers["Array"].use_relative_offset = False  # Property
bpy.context.object.modifiers["Array"].use_constant_offset = True  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[0] = 0  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 49.48  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 97.02  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 97.01  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 97  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 96.99  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 96.98  # Property
bpy.context.object.modifiers["Array"].constant_offset_displace[1] = 96.08  # Property
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
bpy.context.space_data.context = 'MATERIAL'  # Property
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
Python: Traceback (most recent call last):
  File "/Applications/Blender.app/Contents/Resources/3.4/scripts/addons/io_coat3D/__init__.py", line 1436, in draw
    col.prop(coat3D, "coat3D_diffuse", text="Diffuse")
TypeError: UILayout.prop(): error with argument 1, "data" -  Function.data does not support a 'None' assignment AnyType type  # Error
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.cycles.use_guiding = True  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.scene.eevee.use_bloom = True  # Property
bpy.context.scene.eevee.use_gtao = True  # Property
bpy.context.scene.eevee.use_ssr = True  # Property
bpy.context.scene.eevee.use_motion_blur = True  # Property
bpy.context.space_data.shading.type = 'RENDERED'  # Property
bpy.context.space_data.shading.type = 'SOLID'  # Property
bpy.context.space_data.shading.type = 'RENDERED'  # Property
bpy.context.scene.eevee.use_ssr_refraction = True  # Property
bpy.context.scene.eevee.ssr_thickness = 0.2  # Property
bpy.context.scene.eevee.use_volumetric_shadows = True  # Property
bpy.context.scene.render.use_simplify = True  # Property
bpy.context.scene.render.use_simplify = False  # Property
bpy.context.scene.render.use_high_quality_normals = True  # Property
bpy.context.scene.render.use_high_quality_normals = False  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property

# backtrace

# Python backtrace
